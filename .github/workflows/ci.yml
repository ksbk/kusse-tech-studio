name: CI

on:
  push:
    branches: [main, develop, feature/vite-migration]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit hooks
        run: SKIP=pip-audit,hadolint-docker,shellcheck pre-commit run --all-files

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest --cov=app --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          disable_search: true
          verbose: true
        continue-on-error: true
        timeout-minutes: 2
  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Node dependencies
        run: npm install

      - name: Build assets
        run: npm run build

      - name: Build Docker image
        run: docker build -t portfolio .

      - name: Validate Docker Compose configurations
        run: |
          echo "Validating development configuration..."
          docker-compose -f infra/docker-compose.base.yml -f infra/docker-compose.development.yml config --quiet

          echo "Validating staging configuration..."
          docker-compose -f infra/docker-compose.base.yml -f infra/docker-compose.staging.yml config --quiet

          echo "Validating production configuration..."
          docker-compose -f infra/docker-compose.base.yml -f infra/docker-compose.production.yml config --quiet

          echo "âœ… All Docker Compose configurations are valid"
