version: "3.9"

# Production overrides for KusseTechStudio
# Optimized for performance, security, and reliability

services:
  web:
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - GUNICORN_WORKERS=4
    env_file:
      - ../envs/.env.production
    # Don't expose ports directly in production - use nginx
    expose:
      - 5000
    command: gunicorn --bind 0.0.0.0:5000 --workers 4 --timeout 120 --max-requests 1000 --max-requests-jitter 100 --preload run:app
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  redis:
    # Don't expose Redis port in production
    expose:
      - 6379
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  nginx:
    ports:
      - 80:80
      - 443:443
    volumes:
      # Production SSL certificates
      - ../ssl:/etc/nginx/ssl:ro
      # Custom nginx config for production
      - ./nginx/production.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.template
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d
      - DOMAIN_NAME=kussetechstudio.com
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Production database (external or managed service recommended)
  db:
    image: postgres:15-alpine
    networks:
      - kusse-tech-network
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      # Database backups
      - ./backups:/backups
    expose:
      - 5432
    profiles:
      - postgres
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Backup service for production
  backup:
    image: postgres:15-alpine
    networks:
      - kusse-tech-network
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data:ro
      - ./backups:/backups
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    command: |
      sh -c '
      while true; do
        sleep 86400  # 24 hours
        pg_dump -h db -U $$POSTGRES_USER -d $$POSTGRES_DB > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
        # Keep only last 7 days of backups
        find /backups -name "backup_*.sql" -mtime +7 -delete
      done'
    profiles:
      - postgres
      - backup
    depends_on:
      - db

volumes:
  postgres_prod_data:
    driver: local
