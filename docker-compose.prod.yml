version: '3.8'

services:
  web:
    image: kussetechstudio/portfolio:latest
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - redis
      - db
    networks:
      - kusse-network
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - kusse-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kusse-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/production.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./app/static:/var/www/static:ro
    depends_on:
      - web
    networks:
      - kusse-network

  monitoring:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - kusse-network

volumes:
  redis_data:
  postgres_data:
  prometheus_data:

networks:
  kusse-network:
    driver: bridge
